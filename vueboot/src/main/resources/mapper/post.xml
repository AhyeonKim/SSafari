<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssafy.post">

	<select id="getPosts" parameterType="java.lang.Integer"
		resultType="com.ssafy.edu.vue.dto.Post">
		select p.postid postid, p.title title, p.body body, p.created_at created_at, p.memberid memberid,
		p.categoryid categoryid, p.anonymous anonymous, p.locationid locationid,
		if(p.anonymous=1 and m.memberid!=#{memberid}, '익명', m.username) as username, 
		if(p.anonymous=1 and m.memberid!=#{memberid}, 'https://user-images.githubusercontent.com/52685250/73902320-c72d6c00-48d8-11ea-82b4-eb9bfebfe9fb.png', m.img) as img
		from posts p, members m 
		where p.memberid=m.memberid 
		order by postid	desc
	</select>

	<select id="getPostList"
		parameterType="java.lang.Integer"
		resultType="com.ssafy.edu.vue.dto.Post">
		select * from ( select j.id postid, j.name title, j.name body, (4) as categoryid, r.name categoryname, j.memberid, m.username, j.anonymous, j.created_at, j.locationid,
		(select count(*) from likepost where categoryid=4 and postid=j.id) likes,
		(select count(*) from commentpost where categoryid=4 and postid=j.id) comments
		from jmt j, category r, members m
		where r.id=4 and j.memberid=1 and j.memberid=m.memberid
        union
        select c.id postid, c.title, c.body body, (3) as categoryid, r.name categoryname, c.memberid, m.username ,c.anonymous, c.created_at, null locationid,
        (select count(*) from likepost where categoryid=3 and postid=c.id) likes,
		(select count(*) from commentpost where categoryid=3 and postid=c.id) comments
		from codereview c, category r, members m
		where r.id=3 and c.memberid=1 and c.memberid=m.memberid
        union
        select p.postid postid, p.title, p.body, p.categoryid, r.name categoryname, p.memberid, m.username,p.anonymous, p.created_at, p.locationid,
        (select count(*) from likepost where categoryid=p.categoryid and postid=p.postid) likes,
        (select count(*) from commentpost where categoryid=p.categoryid and postid=p.postid) comments
		from posts p, category r, members m
		where r.id=p.categoryid and p.memberid=1 and p.memberid=m.memberid ) as tb
        order by created_at desc
	</select>
	
	<select id="getPostsPaging"
		parameterType="com.ssafy.edu.vue.dto.PostPaging"
		resultType="com.ssafy.edu.vue.dto.Post">
		select p.postid postid, p.title title, p.body body, p.created_at created_at, p.memberid memberid,
		p.categoryid categoryid, p.anonymous anonymous, p.locationid locationid,
		if(p.anonymous=1 and m.memberid!=#{memberid}, '익명', m.username) as username,
		(select count(*) from likepost where categoryid=#{categoryid} and postid=p.postid) likes,
        (select count(*) from commentpost where categoryid=#{categoryid} and postid=p.postid) comments
		from posts p, members m 
		where p.memberid=m.memberid and categoryid=#{categoryid}
		<if test="locationid!=0">and p.locationid=#{locationid}</if>
		<if test="keyword!=null">and title like #{keyword}</if>
		order by postid	desc
		limit 20 offset #{page}
	</select>
	
	<select id="getTotalPost"
		parameterType="com.ssafy.edu.vue.dto.PostPaging"
		resultType="java.lang.Integer">
		select count(*) from posts
		where categoryid=#{categoryid}
		<if test="locationid!=0">and locationid=#{locationid}</if>
		<if test="keyword!=null">and title like #{keyword}</if>
	</select>

	<select id="getPost" parameterType="com.ssafy.edu.vue.dto.Postinfo"
		resultType="com.ssafy.edu.vue.dto.Post">
		select p.postid postid, p.title title, p.body body, p.created_at created_at, p.memberid memberid,
		p.categoryid categoryid, p.anonymous anonymous, p.locationid locationid, if(p.anonymous=1, 'https://user-images.githubusercontent.com/52685250/73902320-c72d6c00-48d8-11ea-82b4-eb9bfebfe9fb.png', m.img) img,
		if(p.anonymous=1 and m.memberid!=#{memberid}, '익명', m.username) as username 
		from posts p, members m 
		where p.memberid=m.memberid and postid = #{postid}
	</select>

	<insert id="addPost"
		parameterType="com.ssafy.edu.vue.dto.Post">
		insert into
		posts(title, body, created_at, memberid, categoryid, anonymous, locationid)
		values(#{title},#{body},now(), #{memberid}, #{categoryid}, #{anonymous}, #{locationid})
	</insert>
	
	<update id="updatePost"
		parameterType="com.ssafy.edu.vue.dto.Post">
		update posts set
		title=#{title},
		body=#{body},
		created_at=now(),
		anonymous=#{anonymous}
		where
		postid=#{postid}
	</update>

	<delete id="deletePost" parameterType="java.lang.Integer">
		delete from posts where
		postid
		= #{postid}
	</delete>
	
	<select id="getCommentJMT"
		parameterType="com.ssafy.edu.vue.dto.Postinfo"
		resultType="com.ssafy.edu.vue.dto.Commentpost">
		select c.cpostid cpostid, c.categoryid categoryid, c.postid postid, 
		c.memberid memberid, c.anonym anonym, m.username username, 
		c.wdate wdate, c.content content, c.anonym anonym, j.memberid writer
		from commentpost c, members m, jmt j
		where c.categoryid=#{categoryid} and c.postid=#{postid} and m.memberid=c.memberid and c.postid=j.id order by c.cpostid
	</select>
	
	<select id="getCommentCode"
		parameterType="com.ssafy.edu.vue.dto.Postinfo"
		resultType="com.ssafy.edu.vue.dto.Commentpost">
		select c.cpostid cpostid, c.categoryid categoryid, c.postid postid, 
		c.memberid memberid, c.anonym anonym, m.username username, 
		c.wdate wdate, c.content content, c.anonym anonym, r.memberid writer
		from commentpost c, members m, codereview r
		where c.categoryid=#{categoryid} and c.postid=#{postid} and m.memberid=c.memberid and c.postid=r.id order by c.cpostid
	</select>
	
	<select id="getCommentPost"
		parameterType="com.ssafy.edu.vue.dto.Postinfo"
		resultType="com.ssafy.edu.vue.dto.Commentpost">
		select c.cpostid cpostid, c.categoryid categoryid, c.postid postid, 
		c.memberid memberid, c.anonym anonym, m.username username, 
		c.wdate wdate, c.content content, c.anonym anonym, p.memberid writer
		from commentpost c, members m, posts p
		where c.categoryid=#{categoryid} and c.postid=#{postid} and m.memberid=c.memberid and c.categoryid=p.categoryid and c.postid=p.postid order by c.cpostid
	</select>
	
	<insert id="addCommentPost"
		parameterType="com.ssafy.edu.vue.dto.Commentpost">
		insert into
		commentpost(categoryid, postid, memberid, wdate, content, anonym)
		values(#{categoryid},#{postid},#{memberid},now(), #{content}, #{anonym})
	</insert>
	
	<update id="updateCommentPost"
		parameterType="com.ssafy.edu.vue.dto.Commentpost">
		update commentpost set
		content=#{content},
		wdate=now(),
		anonym=#{anonym}
		where
		cpostid=#{cpostid}
	</update>

	<delete id="deleteCommentPost" parameterType="java.lang.Integer">
		delete from commentpost where
		cpostid
		= #{cpostid}
	</delete>
	
	<select id="getCategoryPosts"
		parameterType="com.ssafy.edu.vue.dto.CategoryPost"
		resultType="com.ssafy.edu.vue.dto.Post">
		select p.postid postid, p.title title, p.body body, p.created_at created_at, p.memberid memberid, 
		p.categoryid categoryid, p.anonymous anonymous, p.locationid locationid,
		if(p.anonymous=1 and m.memberid!=#{memberid}, '익명', m.username) as username,
		if(p.anonymous=1 and m.memberid!=#{memberid}, 'https://user-images.githubusercontent.com/52685250/73902320-c72d6c00-48d8-11ea-82b4-eb9bfebfe9fb.png', m.img) as img
		from posts p, members m 
		where p.memberid=m.memberid and p.categoryid=#{categoryid}
		order by postid	desc
	</select>
	
	<select id="getLocationPosts"
		parameterType="com.ssafy.edu.vue.dto.LocationFiltering"
		resultType="com.ssafy.edu.vue.dto.Post">
		select p.postid postid, p.title title, p.body body, p.created_at created_at, p.memberid memberid, 
		p.categoryid categoryid, p.anonymous anonymous, p.locationid locationid,
		if(p.anonymous=1 and m.memberid!=#{memberid}, '익명', m.username) as username,
		if(p.anonymous=1 and m.memberid!=#{memberid}, 'https://user-images.githubusercontent.com/52685250/73902320-c72d6c00-48d8-11ea-82b4-eb9bfebfe9fb.png', m.img) as img
		from posts p, members m 
		where p.memberid=m.memberid and p.categoryid=#{categoryid} and p.locationid=#{locationid}
		order by postid	desc
	</select>
	
	<insert id="addLikePost" parameterType="com.ssafy.edu.vue.dto.Postinfo">
		insert into
		likepost(categoryid, postid, memberid)
		values(#{categoryid},#{postid},#{memberid})
	</insert>
	
	<delete id="deleteLikePost" parameterType="com.ssafy.edu.vue.dto.Postinfo">
		delete from likepost where categoryid=#{categoryid} and postid=#{postid} and memberid=#{memberid}
	</delete>
	
	<select id="getLikeCounts" parameterType="com.ssafy.edu.vue.dto.Postinfo" resultType="java.lang.Integer">
		select count(*) from likepost
		where categoryid=#{categoryid} and postid = #{postid}
	</select>
	
	<select id="getCommentCounts" parameterType="com.ssafy.edu.vue.dto.Postinfo" resultType="java.lang.Integer">
		select count(*) from commentpost
		where categoryid=#{categoryid} and postid = #{postid}
	</select>
	
	<insert id="addBoardCategory" parameterType="com.ssafy.edu.vue.dto.Category">
		insert into category(name,explanation,memberid) values(#{name}, #{explanation},#{memberid})
	</insert>
	<insert id="addBoardCategoryAuth" parameterType="com.ssafy.edu.vue.dto.Category">
		insert into categoryauth(name,explanation,memberid) values(#{name}, #{explanation},#{memberid})
	</insert>
	
	<select id="isLike" parameterType="com.ssafy.edu.vue.dto.Postinfo" resultType="java.lang.Integer">
		select count(*) from likepost
		where categoryid=#{categoryid} and postid = #{postid} and memberid = #{memberid}
	</select>
	
	<select id="getBoardCategory"  resultType="com.ssafy.edu.vue.dto.Category">
		select id, name, explanation, memberid from category where id>=5
	</select>
	
	<select id="getBoardCategoryInfo" parameterType="java.lang.Integer" resultType="com.ssafy.edu.vue.dto.Category">
		select name, explanation from category where id=#{id}
	</select>
	
	<select id="getBoardCategoryAuth"  resultType="com.ssafy.edu.vue.dto.Category">
		select c.id, c.name, c.explanation, c.memberid, m.username from categoryauth c, members m 
		where c.memberid=m.memberid
	</select>
	
	<select id="getBoardCategoryOne"  parameterType="java.lang.Integer" resultType="com.ssafy.edu.vue.dto.Category">
		select id, name, explanation, memberid from categoryauth
		where id=#{id}
	</select>
	
	<delete id="deleteBoardCategoryAuth" parameterType="java.lang.Integer">
		delete from categoryauth where id=#{id}
	</delete>
	
	<select id="getBoardSearch" parameterType="java.lang.String" resultType="com.ssafy.edu.vue.dto.Category">
		select id, name, explanation, memberid from category where name like #{keyword}
	</select>
	
	<select id="getPostCategory" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		select categoryid from posts where postid = #{postid}
	</select>
	
	<select id="getPopularComment" parameterType="com.ssafy.edu.vue.dto.Popular" resultType="com.ssafy.edu.vue.dto.Post">
		<choose>
			<when test="categoryid==3">
			select c.id postid, c.title, c.body body, (3) as categoryid, r.name categoryname, c.memberid, m.username ,c.anonymous, c.created_at, null locationid,
        	(select count(*) from likepost where categoryid=3 and postid=c.id) likes,
			(select count(*) from commentpost where categoryid=3 and postid=c.id) comments
			from codereview c, category r, members m
			where r.id=3 and c.memberid=m.memberid and created_at>=#{format}
			order by comments desc, created_at desc limit 3
			</when>
			
			<when test="categoryid==4">
			select j.id postid, j.name title, j.name body, (4) as categoryid, r.name categoryname, j.memberid, m.username, j.anonymous, j.created_at, j.locationid,
			(select count(*) from likepost where categoryid=4 and postid=j.id) likes,
			(select count(*) from commentpost where categoryid=4 and postid=j.id) comments
			from jmt j, category r, members m
			where r.id=4 and j.memberid=m.memberid and created_at>=#{format}
			<if test="locationid!=0">and j.locationid=#{locationid}</if>
			order by comments desc, created_at desc limit 3
			</when>
			
			<otherwise>
			select p.postid postid, p.title, p.body, p.categoryid, r.name categoryname, p.memberid, m.username,p.anonymous, p.created_at, p.locationid,
        	(select count(*) from likepost where categoryid=p.categoryid and postid=p.postid) likes,
        	(select count(*) from commentpost where categoryid=p.categoryid and postid=p.postid) comments
			from posts p, category r, members m
			where r.id=p.categoryid and p.memberid=m.memberid  and created_at>=#{format} and p.categoryid=#{categoryid}
			<if test="locationid!=0">and p.locationid=#{locationid}</if>
        	order by comments desc, created_at desc limit 3
			</otherwise>
		</choose>
	</select>
	
	<select id="getPopularLikes" parameterType="com.ssafy.edu.vue.dto.Popular" resultType="com.ssafy.edu.vue.dto.Post">
		<choose>
			<when test="categoryid==3">
			select c.id postid, c.title, c.body body, (3) as categoryid, r.name categoryname, c.memberid, m.username ,c.anonymous, c.created_at, null locationid,
        	(select count(*) from likepost where categoryid=3 and postid=c.id) likes,
			(select count(*) from commentpost where categoryid=3 and postid=c.id) comments
			from codereview c, category r, members m
			where r.id=3 and c.memberid=m.memberid and created_at>=#{format}
			order by likes desc, created_at desc limit 5
			</when>
			
			<when test="categoryid==4">
			select j.id postid, j.name title, j.name body, (4) as categoryid, r.name categoryname, j.memberid, m.username, j.anonymous, j.created_at, j.locationid,
			(select count(*) from likepost where categoryid=4 and postid=j.id) likes,
			(select count(*) from commentpost where categoryid=4 and postid=j.id) comments
			from jmt j, category r, members m
			where r.id=4 and j.memberid=m.memberid and created_at>=#{format}
			<if test="locationid!=0">and j.locationid=#{locationid}</if>
			order by likes desc, created_at desc limit 5
			</when>
			
			<otherwise>
			select p.postid postid, p.title, p.body, p.categoryid, r.name categoryname, p.memberid, m.username,p.anonymous, p.created_at, p.locationid,
        	(select count(*) from likepost where categoryid=p.categoryid and postid=p.postid) likes,
        	(select count(*) from commentpost where categoryid=p.categoryid and postid=p.postid) comments
			from posts p, category r, members m
			where r.id=p.categoryid and p.memberid=m.memberid  and created_at>=#{format} and p.categoryid=#{categoryid}
			<if test="locationid!=0">and p.locationid=#{locationid}</if>
        	order by likes desc, created_at desc limit 5
			</otherwise>
		</choose>
	</select>
	
	<select id="getAdminCount" resultType="java.lang.Integer">
		select count(*) from members where delflag=0 and auth=1
	</select>
	
	<select id="getSsafyCount" resultType="java.lang.Integer">
		select count(*) from members where delflag=0 and auth=2
	</select>
	
	<select id="getUserCount"   resultType="java.lang.Integer">
		select count(*) from members where delflag=0 and (auth=4 or auth=3)
	</select>
	
	<select id="getPostCount"   resultType="java.lang.Integer">
		select (select count(*) from posts)+(select count(*) from jmt)+(select count(*) from codereview) count
	</select>
	
	<select id="getPortfolioCount"  resultType="java.lang.Integer">
		SELECT count(*) FROM a5.portfolios
	</select>
	
	
</mapper>
